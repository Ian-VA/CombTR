# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'detectify.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from run_model import run_dicom_through_model, get_transformed_dicom_as_array
import os
import matplotlib.pyplot as plt
import queue 

class DataResultObj(QtCore.QObject):
    def __init__(self, data):
        self.data = data

class DataProcessingThread(QtCore.QThread):
    result_ready = QtCore.pyqtSignal(object)

    def __init__(self, queue, callback):
        super().__init__()
        self.queue = queue
        self.result_ready.connect(callback)
        self.filename = None

    def run(self):
        data = get_transformed_dicom_as_array(self.filename)
        self.result_ready.emit(DataResultObj(data))

    def setFilename(self, filename):
        self.filename = filename

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(713, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(0, 30, 71, 521))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.verticalSlider = QtWidgets.QSlider(self.horizontalLayoutWidget) ## slicer
        self.verticalSlider.setOrientation(QtCore.Qt.Vertical)
        self.verticalSlider.setObjectName("verticalSlider")
        self.horizontalLayout.addWidget(self.verticalSlider)
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 10, 58, 18))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(10, 550, 58, 18))
        self.label_2.setObjectName("label_2")
        self.checkBox = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox.setGeometry(QtCore.QRect(480, 550, 171, 22))
        self.checkBox.setObjectName("checkBox")
        self.toolButton = QtWidgets.QToolButton(self.centralwidget)
        self.toolButton.setGeometry(QtCore.QRect(80, 0, 61, 51))
        self.toolButton.setObjectName("toolButton")
        self.toolButton_4 = QtWidgets.QToolButton(self.centralwidget)
        self.toolButton_4.setGeometry(QtCore.QRect(150, 0, 61, 51))
        self.toolButton_4.setObjectName("toolButton_4")
        self.toolButton_5 = QtWidgets.QToolButton(self.centralwidget)
        self.toolButton_5.setGeometry(QtCore.QRect(220, 0, 61, 51))
        self.toolButton_5.setObjectName("toolButton_5")
        self.verticalSlider_2 = QtWidgets.QSlider(self.centralwidget)
        self.verticalSlider_2.setGeometry(QtCore.QRect(660, 60, 20, 160)) ## brightness
        self.verticalSlider_2.setOrientation(QtCore.Qt.Vertical)
        self.verticalSlider_2.setObjectName("verticalSlider_2")
        self.verticalSlider_3 = QtWidgets.QSlider(self.centralwidget)
        self.verticalSlider_3.setGeometry(QtCore.QRect(660, 250, 20, 160)) ## contrast
        self.verticalSlider_3.setOrientation(QtCore.Qt.Vertical)
        self.verticalSlider_3.setObjectName("verticalSlider_3")
        self.toolButton_6 = QtWidgets.QToolButton(self.centralwidget)
        self.toolButton_6.setGeometry(QtCore.QRect(290, 0, 61, 51))
        self.toolButton_6.setObjectName("toolButton_6")
        self.toolButton_7 = QtWidgets.QToolButton(self.centralwidget)
        self.toolButton_7.setGeometry(QtCore.QRect(590, 0, 61, 51))
        self.toolButton_7.setObjectName("toolButton_7")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(680, 250, 58, 18))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(680, 390, 58, 18))
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(680, 60, 58, 18))
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(680, 200, 58, 18))
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(80, 80, 551, 441))
        self.label_7.setObjectName("label_7")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.queue = queue.Queue()
        self.data_thread = DataProcessingThread(self.queue, self.handleThreadResult)
        self.data_thread.result_ready.connect(self.projectInitialDICOM)

        self.data_array = None
        self.data_slice_nums = None
        self.fileName = None

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "Max Slice"))
        self.label_2.setText(_translate("MainWindow", "Min Slice"))
        self.checkBox.setText(_translate("MainWindow", "Segmentation Enabled"))

        self.verticalSlider.valueChanged[int].connect(self.sliceData)
        self.verticalSlider.setMinimum(0)
        self.verticalSlider.setMaximum(100)

        self.toolButton.setText(_translate("MainWindow", "File"))
        self.toolButton.clicked.connect(self.filebuttonClicked)

        self.toolButton_4.setText(_translate("MainWindow", "Zoom+"))
        self.toolButton_5.setText(_translate("MainWindow", "Zoom-"))
        self.toolButton_6.setText(_translate("MainWindow", "Rotate+90"))

        self.toolButton_7.setText(_translate("MainWindow", "Process"))
        self.toolButton_7.clicked.connect(self.processbuttonClicked)
        self.label_3.setText(_translate("MainWindow", "C+"))
        self.label_4.setText(_translate("MainWindow", "C-"))
        self.label_5.setText(_translate("MainWindow", "B+"))
        self.label_6.setText(_translate("MainWindow", "B-"))

    def handleThreadResult(self, dataobject):
        data = dataobject.data
        self.data_array = data
        self.data_slice_nums = self.data_array.shape[-1]

    def sliceData(self, value):
        if self.data_array is not None:
            plt.imsave("temp/temp.jpeg", self.data_array[0, 0, :, :, self.verticalSlider.value()])
            self.label_7.setPixmap(QtGui.QPixmap("temp/temp.jpeg"))
            self.label_7.setScaledContents(True)

    def processbuttonClicked(self):
        if self.data_array is not None:
            data = run_dicom_through_model(self.filename)

    def filebuttonClicked(self):
        options = QtWidgets.QFileDialog.Options()
        options |= QtWidgets.QFileDialog.DontUseNativeDialog
        fileName, _ = QtWidgets.QFileDialog.getOpenFileName(None, "Choose File", "", "DICOM (*.gz)", options=options)
        self.filename = fileName
        self.data_thread.setFilename(fileName)
        self.data_thread.start()
        #data = get_transformed_dicom_as_array(self.filename)
        #self.projectInitialDICOM(data)

    def projectInitialDICOM(self, data):
        if self.data_array is not None and self.data_slice_nums is not None:
            self.verticalSlider.setMaximum(self.data_slice_nums-1)

            plt.imsave("temp/temp.jpeg", self.data_array[0, 0, :, :, 0])
            self.label_7.setPixmap(QtGui.QPixmap("temp/temp.jpeg"))
            self.label_7.setScaledContents(True)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

